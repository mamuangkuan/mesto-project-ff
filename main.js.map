{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex-praktikum/./src/components/card.js","webpack://yandex-praktikum/./src/components/modal.js","webpack://yandex-praktikum/./src/components/cards.js","webpack://yandex-praktikum/./src/index.js"],"sourcesContent":["// Темплейт карточки\nconst cardTemplate = document.querySelector(\"#card-template\").content;\n\n// Функция создания карточки\nexport function createNewCard(item, removeCard, openBigImgModal, likeCard) {\n  // Клонирование экземпляра карточки\n  const cardItem = cardTemplate.querySelector(\".places__item\").cloneNode(true);\n  // Кнопка удаления карточки\n  const removeButton = cardItem.querySelector(\".card__delete-button\");\n  // Кнопка лайка\n  const likeButton = cardItem.querySelector(\".card__like-button\");\n  // Блок с картинкой\n  const cardImageUrl = cardItem.querySelector(\".card__image\");\n  // Заголовок картинки\n  const cardTitle = cardItem.querySelector(\".card__title\");\n  // Заполняем переменные данными\n  cardImageUrl.src = item.link;\n  cardTitle.alt = item.name;\n  cardTitle.textContent = item.name;\n  // Обработчик открытия большой картинки\n  cardImageUrl.addEventListener(\"click\", function () {\n    openBigImgModal(item);\n  });\n\n  // Обработчик кнопки удаления карточки\n  removeButton.addEventListener(\"click\", removeCard);\n\n  // Обработчик кнопки лайка\n  likeButton.addEventListener(\"click\", likeCard);\n\n  // Возврат готового результата\n  return cardItem;\n}\n\n// Функция удаления карточки\nexport function removeCard(evt) {\n  evt.target.closest(\".places__item\").remove();\n}\n\n// Функция лайка карточки\nexport function likeCard(evt) {\n  evt.target.classList.toggle(\"card__like-button_is-active\");\n}\n","// Функция открытия модального окна\nexport function openModal(item) {\n  item.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", closePopupByEsc);\n}\n\n// Функция закрытия модального окна\nexport function closeModal(item) {\n  item.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", closePopupByEsc);\n}\n\n// Функция закрытия модальных окон нажатием клавиши ESC\nfunction closePopupByEsc(evt) {\n  if (evt.key === \"Escape\") {\n    closeModal(document.querySelector(\".popup_is-opened\"));\n  }\n}\n\n// Функция закрытия модальных окон кликом по оверлею\nexport function closePopupByOverlay(evt) {\n  if (evt.target === evt.currentTarget) {\n    closeModal(evt.currentTarget);\n  }\n}","export const initialCards = [\n  {\n    name: \"Архыз\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\n  },\n  {\n    name: \"Челябинская область\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\n  },\n  {\n    name: \"Иваново\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\n  },\n  {\n    name: \"Камчатка\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\n  },\n  {\n    name: \"Холмогорский район\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\n  },\n  {\n    name: \"Байкал\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\n  }\n];","// Подключение файла стилей\nimport \"./pages/index.css\";\n// Подключений функций создания, удаления и лайка карточки\nimport { createNewCard, removeCard, likeCard } from \"./components/card.js\";\n// Подключений функций открытия и закрытия попапов\nimport {\n  openModal,\n  closeModal,\n  closePopupByOverlay,\n} from \"./components/modal.js\";\n// Подключение массива данных для карточек\nimport { initialCards } from \"./components/cards.js\";\n\n// СПИСОК ПЕРЕМЕННЫХ И КОНСТАНТ\n// Список карточек\nconst listOfCards = document.querySelector(\".places__list\");\n// Модальное окно добавления нового места\nconst modalAddNewPlace = document.querySelector(\".popup_type_new-card\");\n// Кнопка добавления нового места\nconst modalAddNewPlaceButton = document.querySelector(\".profile__add-button\");\n// Модальное окно редактирования профиля\nconst modalProfile = document.querySelector(\".popup_type_edit\");\n// Кнопка редактирования профиля\nconst profileEditButton = document.querySelector(\".profile__edit-button\");\n// Форма редактирования профиля\nconst formProfile = document.forms[\"edit-profile\"];\n// Поле \"Имя\" формы редактирования профиля\nconst nameInput = formProfile.elements.name;\n// Поле \"Должность\" формы редактирования профиля\nconst jobInput = formProfile.elements.description;\n// Форма добавления нового места\nconst formNewPlace = document.forms[\"new-place\"];\n// Поле \"Место\" формы добавления нового места\nconst namePlaceInput = formNewPlace.elements[\"place-name\"];\n// Поле \"Адрес картинки\" формы добавления нового места\nconst imgUrlInput = formNewPlace.elements.link;\n// Модальное окно большой картинки\nconst modalImg = document.querySelector(\".popup_type_image\");\n// Адрес картинки для модального окна большой картинки\nconst modalImgUrl = modalImg.querySelector(\".popup__image\");\n// Подпись под картинкой модального окна большой картинки\nconst modalImgTitle = modalImg.querySelector(\".popup__caption\");\n// Иконка закрытия большой картинки\nconst closeModalImg = modalImg.querySelector(\".popup__close\");\n// Иконка закрытия модального окна профиля\nconst closeModalProfile = modalProfile.querySelector(\".popup__close\");\n// Иконка закрытия модального окна добавления нового места\nconst closeModalAddNewPlace = modalAddNewPlace.querySelector(\".popup__close\");\n\n// Вывод карточек на страницу\ninitialCards.forEach(function (item) {\n  const cardItem = createNewCard(item, removeCard, openBigImgModal, likeCard);\n  listOfCards.append(cardItem);\n});\n\n// Обработчик открытия модального окна добавления нового места\nmodalAddNewPlaceButton.addEventListener(\"click\", function () {\n  openModal(modalAddNewPlace);\n});\n\n// Обработчик открытия модального окна профиля\nprofileEditButton.addEventListener(\"click\", function () {\n  // Вставляем в поля модального окна профиля текущее значение из шаблона\n  nameInput.value = document.querySelector(\".profile__title\").textContent;\n  jobInput.value = document.querySelector(\".profile__description\").textContent;\n  // Открываем модальное окно профиля\n  openModal(modalProfile);\n});\n\n// функция редактирования профиля\nfunction submitFormProfile(evt) {\n  // Скидываем дефолтное поведение для сабмита\n  evt.preventDefault();\n  // Присваиваем HTML-блоку с информацией о профиле данные из формы\n  document.querySelector(\".profile__title\").textContent = nameInput.value;\n  document.querySelector(\".profile__description\").textContent = jobInput.value;\n  // Закрываем окно\n  closeModal(modalProfile);\n}\n\n// Обработчик самбита для редакитрования профиля\nformProfile.addEventListener(\"submit\", submitFormProfile);\n\n// Обработчик формы добавления нового места\nformNewPlace.addEventListener(\"submit\", function (evt) {\n  // скидываем дефолтное поведение для сабмита\n  evt.preventDefault();\n  // формируем массив для перадачи в функцию добавления createNewCard\n  const newCard = {\n    name: namePlaceInput.value,\n    link: imgUrlInput.value,\n  };\n  // передаем массив в функцию, а полученные данные добавляем в начало блока карточек благодаря методу prepend\n  listOfCards.prepend(\n    createNewCard(newCard, removeCard, openBigImgModal, likeCard)\n  );\n  // очищаем форму после сохранения полей\n  formNewPlace.reset();\n  // закрываем модальное окно после сохранения\n  closeModal(modalAddNewPlace);\n});\n\n// Функция заполнения полей большой картинки данными из функции создания карточки\nfunction openBigImgModal(item) {\n  // Заполняем переменные данными\n  modalImgUrl.src = item.link;\n  modalImgUrl.alt = item.name;\n  modalImgTitle.textContent = item.name;\n  // Открываем модальное окно с большой картинкой\n  openModal(modalImg);\n}\n\n// Обработчик закрытия большой картинки нажатием на крестик\ncloseModalImg.addEventListener(\"click\", function () {\n  closeModal(modalImg);\n});\n\n// Обработчик закрытия модального окно профиля нажатием на крестик\ncloseModalProfile.addEventListener(\"click\", function () {\n  closeModal(modalProfile);\n});\n\n// Обработчик закрытия модального окна добавления нового места нажатием на крестик\ncloseModalAddNewPlace.addEventListener(\"click\", function () {\n  closeModal(modalAddNewPlace);\n});\n\n\n// Обработчик закрытия модального окна добавления нового места по клику на оверлей\nmodalAddNewPlace.addEventListener(\"click\", closePopupByOverlay);\n\n// Обработчик закрытия модального окна профиля по клику на оверлей\nmodalProfile.addEventListener(\"click\", closePopupByOverlay);\n\n// Обработчик закрытия модального окна большой картинки по клику на оверлей\nmodalImg.addEventListener(\"click\", closePopupByOverlay);"],"names":["cardTemplate","document","querySelector","content","createNewCard","item","removeCard","openBigImgModal","likeCard","cardItem","cloneNode","removeButton","likeButton","cardImageUrl","cardTitle","src","link","alt","name","textContent","addEventListener","evt","target","closest","remove","classList","toggle","openModal","add","closePopupByEsc","closeModal","removeEventListener","key","closePopupByOverlay","currentTarget","listOfCards","modalAddNewPlace","modalAddNewPlaceButton","modalProfile","profileEditButton","formProfile","forms","nameInput","elements","jobInput","description","formNewPlace","namePlaceInput","imgUrlInput","modalImg","modalImgUrl","modalImgTitle","closeModalImg","closeModalProfile","closeModalAddNewPlace","forEach","append","value","preventDefault","newCard","prepend","reset"],"sourceRoot":""}